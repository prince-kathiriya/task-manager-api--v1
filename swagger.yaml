openapi: 3.0.0
info:
    title: Task Manager API
    contact: {}
    version: "1.0"
servers:
    - url: https://task-manager-api--v1.herokuapp.com/api/v1
      variables: {}
paths:
    /tasks:
        get:
            tags:
                - Tasks
            summary: Get All Tasks
            operationId: GetAllTasks
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security:
                - bearer: []
        post:
            tags:
                - Tasks
            summary: Create Task
            operationId: CreateTask
            parameters: []
            requestBody:
                description: ""
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/createTaskRequest"
                        example:
                            name: Task 1
                            completed: true
                required: true
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /tasks/{id}:
        parameters:
            - in: path
              name: id
              schema:
                  type: string
              required: true
              description: The task ID

        get:
            tags:
                - Tasks
            summary: Get Task
            operationId: GetTask
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security:
                - bearer: []

        patch:
            tags:
                - Tasks
            summary: Update Task
            operationId: UpdateTask
            parameters: []
            requestBody:
                description: ""
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/updateTaskRequest"
                        example:
                            name: Task 2
                            completed: true
                required: true
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security:
                - bearer: []

        delete:
            tags:
                - Tasks
            summary: Delete Task
            operationId: DeleteTask
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /auth/login:
        post:
            tags:
                - Auth
            summary: Login User
            operationId: LoginUser
            parameters: []
            requestBody:
                description: ""
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LoginUserRequest"
                        example:
                            username: john
                            password: secret
                required: true
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security: []
    /auth/register:
        post:
            tags:
                - Auth
            summary: Register User
            operationId: RegisterUser
            parameters: []
            requestBody:
                description: ""
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/RegisterUserRequest"
                        example:
                            username: peter
                            password: secret
                required: true
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security: []
components:
    schemas:
        createTaskRequest:
            title: createTaskRequest
            required:
                - name
                - completed
            type: object
            properties:
                name:
                    type: string
                completed:
                    type: boolean
            example:
                name: Task 1
                completed: true
        updateTaskRequest:
            title: updateTaskRequest
            required:
                - name
                - completed
            type: object
            properties:
                name:
                    type: string
                completed:
                    type: boolean
            example:
                name: Task 2
                completed: true
        LoginUserRequest:
            title: LoginUserRequest
            required:
                - username
                - password
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
            example:
                username: john
                password: secret
        RegisterUserRequest:
            title: RegisterUserRequest
            required:
                - username
                - password
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
            example:
                username: peter
                password: secret
    securitySchemes:
        bearer:
            type: http
            scheme: bearer
security: []
tags:
    - name: Auth
      description: ""
    - name: Tasks
      description: ""
